# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_and_deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9, 3.10,3.11,3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies and build package on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc python3-dev
        python -m pip install --upgrade pip
        pip install wheel
        python setup.py bdist_wheel

    - name: Install dependencies and build package on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install gcc
        python -m pip install --upgrade pip
        pip install wheel
        python setup.py bdist_wheel

    - name: Install dependencies and build package on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install visualstudio2019buildtools -y --ignore-checksums
        choco install visualstudio2019-workload-vctools -y --ignore-checksums
        python -m pip install --upgrade pip
        pip install wheel
        python setup.py bdist_wheel

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@main
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
